@model Fanword.Business.ViewModels.Registration.AdvertiserRegistrationViewModel
@{
    ViewBag.Title = "Advertiser Web Registration";
    Layout = "~/Views/Shared/_AnonymousLayout.cshtml";
}

@section MetronicPageLevelStyles {
    <link href="/Theme/assets/pages/css/login.min.css" rel="stylesheet" type="text/css" />
    <style>
    </style>
    <link href="~/Content/Registration.css" rel="stylesheet" />
}

<div class="logo hidden-until-load">
    <a href="javascript:;">
        <img src="~/Images/Logos/fanword-white.png" alt="" />
    </a>
</div>


<div class="content hidden-until-load" style="padding: 10px 30px 0px;">
    @using (Html.BeginForm("AdvertiserRegistration", "Registration", null, FormMethod.Post, new { @class = "login-form" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.LogoBlob)
        @Html.HiddenFor(m => m.LogoContainer)
        @Html.HiddenFor(m => m.LogoUrl)
        @Html.HiddenFor(m => m.IsAccountCreated)
        if (Model.IsAccountCreated)
        {
            @Html.HiddenFor(m => m.Email)
        }
        <h3 class="font-white">Sign Up</h3>
        <p class="hint font-white">Thank you for your interest in becoming an advertiser.  Please fill out this form to get started.</p>
        <div class="form-group">
            @Html.LabelFor(m => m.CompanyName, new { @class = "control-label visible-ie8 visible-ie9" })
            @Html.TextBoxFor(m => m.CompanyName, new { autocomplete = "off", placeholder = "Company Name", @class = "form-control placeholder-no-fix" })
            @Html.ValidationMessageFor(m => m.CompanyName)
        </div>
        
            <div class="form-group">
                @Html.LabelFor(m => m.FirstName, new { @class = "control-label visible-ie8 visible-ie9" })
                @Html.TextBoxFor(m => m.FirstName, new { autocomplete = "off", placeholder = "Your First Name", @class = "form-control placeholder-no-fix" })
                @Html.ValidationMessageFor(m => m.FirstName)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.LastName, new { @class = "control-label visible-ie8 visible-ie9" })
                @Html.TextBoxFor(m => m.LastName, new { autocomplete = "off", placeholder = "Your Last Name", @class = "form-control placeholder-no-fix" })
                @Html.ValidationMessageFor(m => m.LastName)
            </div>
        
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "control-label visible-ie8 visible-ie9" })
            @if (Model.IsAccountCreated)
            {
                @Html.TextBoxFor(m => m.Email, new { autocomplete = "off", placeholder = "Email", @class = "form-control placeholder-no-fix disabled", disabled = "disabled" })
}
            else
            {
                @Html.TextBoxFor(m => m.Email, new { autocomplete = "off", placeholder = "Email", @class = "form-control placeholder-no-fix" })
}
            @Html.ValidationMessageFor(m => m.Email)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.WebsiteLink, new { @class = "control-label visible-ie8 visible-ie9" })
            @Html.TextBoxFor(m => m.WebsiteLink, new { autocomplete = "off", placeholder = "Website Link", @class = "form-control placeholder-no-fix" })
            @Html.ValidationMessageFor(m => m.WebsiteLink)
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.CompanyDescription, new { @class = "control-label visible-ie8 visible-ie9" })
            @Html.TextAreaFor(m => m.CompanyDescription, new { autocomplete = "off", placeholder = "Tell us more about your company", rows = 4, style = "height:75px;", @class = "form-control placeholder-no-fix" })
            @Html.ValidationMessageFor(m => m.CompanyDescription)
        </div>
        if (!Model.IsAccountCreated)
        {
            <div class="form-group">
                @Html.LabelFor(m => m.Password, new { @class = "control-label visible-ie8 visible-ie9" })
                @Html.PasswordFor(m => m.Password, new { autocomplete = "off", placeholder = "Password", @class = "form-control placeholder-no-fix" })
                @Html.ValidationMessageFor(m => m.Password)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label visible-ie8 visible-ie9" })
                @Html.PasswordFor(m => m.ConfirmPassword, new { autocomplete = "off", placeholder = "Confirm Password", @class = "form-control placeholder-no-fix" })
                @Html.ValidationMessageFor(m => m.ConfirmPassword)
            </div>
        }
        <div class="form-group text-center">
            @*logo*@
            <h3 class="font-white">Upload a Logo</h3>
            <div id="logoError" class="text-danger" style="display: none;">Logo is required</div>
            <img src="@Url.Content("/Images/Placeholder/placeholder.png")" alt="" id="logoImage" style="max-height: 250px; max-width: 250px; cursor: pointer;" />

            <div style="display: none;">
                @(Html.Kendo().Upload()
                      .Name("advertiserLogo")
                      .Multiple(false)
                      .Async(a =>
                      {
                          a.SaveUrl(Url.Action("UploadAdvertiserLogo", "Uploads"));
                          a.AutoUpload(false);
                      })
                      .Events(e => e.Complete("onUploadComplete").Success("onSuccess").Select("onSelect"))
                )
            </div>
            <p style="color: white">Recommended logo size is 250 pixels by 250 pixels)</p>
        </div>
        <div class="form-actions" style="padding-top: 0px; margin-bottom: -2px;">
            <button type="button" class="btn green uppercase jq-register" data-loading-text="Registering..." style="width:100%" onclick="$(this).button('loading');">Register</button>
        </div>
    }
</div>

@section MetronicPagePlugins {
    <script src="/Theme/assets/global/plugins/jquery-validation/js/additional-methods.min.js" type="text/javascript"></script>
    <script src="/Theme/assets/global/plugins/backstretch/jquery.backstretch.min.js" type="text/javascript"></script>
}

@section CustomScripts {
    <script>
        function onSelect(e) {
            var fileReader = new FileReader();
            fileReader.onload = function(event) {
                var mapImage = event.target.result;
                $('#logoImage').attr('src', mapImage);
            };

            fileReader.readAsDataURL(e.files[0].rawFile);

        }
        function onSuccess(e) {
            $('#LogoBlob').val(e.response.Blob);
            $('#LogoContainer').val(e.response.Container);
            $('#LogoUrl').val(e.response.Url);
        }

        function onUploadComplete(e) {
            $('#advertiserLogo').data("kendoUpload").clearAllFiles();
            $('.login-form').submit();
        };

        $(document).on('click', '#logoImage', function () {
            $('#advertiserLogo').trigger('click');
        });

        $(document).on('ready', function () {
            $('body').addClass('login');
            $('.hidden-until-load').show();
            if ($('#LogoUrl').val() != undefined && $('#LogoUrl').val() != '') {
                $('#logoImage').attr('src', $('#LogoUrl').val());
            }
            $.backstretch([
                "/Images/Backgrounds/fanword-background.jpg"
            ], {
                    fade: 1000,
                    duration: 8000
                }
            );
        });

        $(document).on('click', '.jq-register', function () {
            if ($('#LogoUrl').val() == undefined || $('#LogoUrl').val() =="") {
                $('#logoError').show();
            }
            if ($('.login-form').valid()) {
                //continue
                $('#logoError').hide();
                debugger;
                if ($('#advertiserLogo').data('kendoUpload').getFiles().length > 0) {
                    $('#advertiserLogo').data('kendoUpload').upload();
                } else {
                    $('.login-form').submit();
                }
            } else {
                $(this).button('reset');
            }
        });


        $('.login-form').on('submit', function () {
            if ($(this).valid()) {
                $('button:submit').button('loading');
            }
        });

    </script>
}
