// This file has been autogenerated from a class added in the UI designer.

using System;
using Fanword.iOS.Shared;
using Fanword.Poco.Models;
using Fanword.Shared;
using Foundation;
using Mobile.Extensions.iOS.Extensions;
using Mobile.Extensions.iOS.Sources;
using UIKit;

namespace Fanword.iOS
{
	public partial class SportAboutViewController : BaseViewController
	{
		public string SportId; 
        CustomListSource<AthleteItem> source;
		CustomListSource<TeamProfile> teamProfileSource;
		public SportAboutViewController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad()
		{
			base.ViewDidLoad();


			btnAthletes.TouchUpInside += (sender, args) =>
			{
				SetButtons(btnAthletes);
				tvTable.Source = source;
				tvTable.ReloadData();
			};

			btnTeams.TouchUpInside += (sender, e) =>
			{
				SetButtons(btnTeams);
				tvTable.Source = teamProfileSource;
				tvTable.ReloadData();
			};

			GetData();
            SetButtons(btnTeams);
		}

		void GetData()
		{
			var apiTask = new ServiceApi().GetAthletesForSport(SportId);
			apiTask.HandleError(LoadingScreen);
			apiTask.OnSucess(response =>
			{
				source = new CustomListSource<AthleteItem>(response.Result, GetCell, (tableView, indexPath) => 70);
				source.NoContentText = "No Athletes";
			});

			var apiTask2 = new ServiceApi().GetTeamsForSport(SportId);
			apiTask2.HandleError(LoadingScreen);
			apiTask2.OnSucess(response =>
			{
				teamProfileSource = new CustomListSource<TeamProfile>(response.Result, GetCell, (tableView, indexPath) => 70);
				teamProfileSource.NoContentText = "No Teams";
				tvTable.Source = teamProfileSource;
				tvTable.ReloadData();
			});
		}

		public UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath, AthleteItem item)
		{
			var cell = tableView.DequeueReusableCell("SportAthleteCell", indexPath) as SportAthleteCell;
            cell.SetData(item, indexPath.Row, (pos, btnFollow) =>
            {
                var model = source.Items[pos];
                Shared.Follower.ToggleFollow(btnFollow, model, model.Id, FeedType.User);
            }, NavigationController);
			cell.SelectionStyle = UITableViewCellSelectionStyle.None;
			return cell;
		}

		public UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath, TeamProfile item)
		{
			var cell = tableView.DequeueReusableCell("SportAthleteCell", indexPath) as SportAthleteCell;
			cell.SetData(item, indexPath.Row, (pos, btnFollow) =>
			{
				var model = source.Items[pos];
			    Shared.Follower.ToggleFollow(btnFollow, model, model.Id, FeedType.Team);
			}, NavigationController);
			cell.SelectionStyle = UITableViewCellSelectionStyle.None;
			return cell;
		}

        void SetButtons(UIButton button)
        {
            btnTeams.SetTitleColor(UIColor.FromRGB(144, 144, 144), UIControlState.Normal);
            btnAthletes.SetTitleColor(UIColor.FromRGB(144, 144, 144), UIControlState.Normal);
            button.SetTitleColor(UIColor.FromRGB(21, 21, 21), UIControlState.Normal);
        }
	}
}
