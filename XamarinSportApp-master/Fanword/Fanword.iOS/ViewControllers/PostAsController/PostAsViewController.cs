// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using Plugin.Settings;
using UIKit;
using Mobile.Extensions.Extensions;
using Fanword.Poco.Models;
using FFImageLoading;
using FFImageLoading.Transformations;
using System.Linq;
using Fanword.Shared.Models;
using System.Collections.Generic;
using Mobile.Extensions.iOS.Sources;

namespace Fanword.iOS
{
    public partial class PostAsViewController : BaseViewController
    {
        public Action UserPicked { get; set; }
        public Action ContentSourcePicked { get; set; }
        public Action<PostAsAdminProfile> AdminClicked { get; set; }

        public PostAsViewController(IntPtr handle) : base(handle)
        {
        }

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            View.BackgroundColor = UIColor.Clear;
            vwBackground.AddGestureRecognizer(new UITapGestureRecognizer(() =>
            {
                DismissViewController(true, null);
            }));

            var user = CrossSettings.Current.GetValueOrDefaultJson<User>("User");

            if (!string.IsNullOrEmpty(user.ProfileUrl))
            {
                ImageService.Instance.LoadUrl(user.ProfileUrl).Retry(3, 300).Transform(new CircleTransformation()).Into(imgProfile);
            }

            lblName.Text = user.FirstName + " " + user.LastName;
            if (string.IsNullOrEmpty(user.ContentSourceId) || !user.ContentSourceApproved)
            {
                vwContentSource.Hidden = true;
            }
            else
            {
                lblContentSource.Text = user.ContentSourceName;
                ImageService.Instance.LoadUrl(user.ContentSourceUrl).Retry(3, 300).Transform(new CircleTransformation()).Into(imgContentSource);
            }

            vwUser.AddGestureRecognizer(new UITapGestureRecognizer(() =>
            {
                UserPicked?.Invoke();
                DismissViewController(true, null);
            }));

            vwContentSource.AddGestureRecognizer(new UITapGestureRecognizer(() =>
            {
                ContentSourcePicked?.Invoke();
                DismissViewController(true, null);
            }));

            var adminProfiles = user.AdminSchools?.Select(m => new PostAsAdminProfile() { SchoolId = m.Id, Title = m.Name, Url = m.ProfileUrl }).OrderBy(m => Title).ThenBy(m => m.SubTitle).ToList() ?? new List<PostAsAdminProfile>();
            adminProfiles.AddRange(user.AdminTeams?.Select(m => new PostAsAdminProfile() { TeamId = m.Id, Title = m.SchoolName, SubTitle = m.SportName, Url = m.ProfileUrl }) ?? new List<PostAsAdminProfile>().OrderBy(m => Title).ThenBy(m => m.SubTitle));
            var source = new CustomListSource<PostAsAdminProfile>(adminProfiles, GetCell, (arg1, arg2) => 65);
            tvAdmins.Source = source;
            source.NoContentEnabled = false;

            lcTableHeight.Constant = 65 * adminProfiles.Count;
        }

        public UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath, PostAsAdminProfile item)
        {
            var cell = tableView.DequeueReusableCell("AdminCell", indexPath) as AdminCell;
            cell.SetData(item, Clicked);
            cell.SelectionStyle = UITableViewCellSelectionStyle.None;
            return cell;

        }

        void Clicked(PostAsAdminProfile item)
        {
            AdminClicked?.Invoke(item);
			DismissViewController(true, null);
        }
        

        public override void ViewDidLayoutSubviews()
        {
            base.ViewDidLayoutSubviews();
			tvAdmins.SizeToFit();
        }
	}
}
