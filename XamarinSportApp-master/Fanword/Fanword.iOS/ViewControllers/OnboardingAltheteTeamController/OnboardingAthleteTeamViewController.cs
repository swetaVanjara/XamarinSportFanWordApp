// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using Mobile.Extensions.iOS.Sources;
using Mobile.Extensions.iOS.Extensions;
using System.Collections.Generic;
using Fanword.Shared;
using Fanword.Poco.Models;

namespace Fanword.iOS
{
	public partial class OnboardingAthleteTeamViewController : BaseViewController
	{
		public string ImageFilePath;
        public bool IsEdit;
		public OnboardingAthleteTeamViewController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();

			btnBack.TouchUpInside += (sender, e) => NavigationController.PopViewController(true);

			txtSearch.EditingChanged += (sender, e) =>
			{
				GetData ();
			};
		}

		void GetData ()
		{
			if (string.IsNullOrEmpty (txtSearch.Text))
			{
				var source = tvTeams.Source as CustomListSource<AthleteTeam>;
				source.Items = new List<AthleteTeam>();
				source.NoContentEnabled = false;
				tvTeams.ReloadData ();
			}
			else
			{
				var apiTask = new ServiceApi ().GetAthleteTeams (txtSearch.Text);
				apiTask.HandleError (LoadingScreen);
				apiTask.OnSucess (response =>
				{
					if (response.Result.SearchText == txtSearch.Text)
					{
						if (tvTeams.Source == null)
						{
							var source = new CustomListSource<AthleteTeam> (response.Result.AthleteTeams, GetCell, (tv, ip) => 60);
							source.NoContentText = "No Teams Found";
							source.ItemClick += (sender, e) =>
							{
								var controller = Storyboard.InstantiateViewController<OnboardingAthleteSeasonViewController> ();
                                controller.IsEdit = IsEdit;
								controller.AthleteTeam = e;
								controller.ImageFilePath = ImageFilePath;
								NavigationController.PushViewController (controller, true);
							};
							tvTeams.Source = source;
							tvTeams.ReloadData ();
						}
						else
						{
							var source = tvTeams.Source as CustomListSource<AthleteTeam>;
							source.Items = response.Result.AthleteTeams;
							source.NoContentEnabled = true;
							tvTeams.ReloadData ();
						}
					}
				});
			}
		}

		public UITableViewCell GetCell (UITableView tableView, NSIndexPath indexPath, AthleteTeam item)
		{
			var cell = tableView.DequeueReusableCell ("AthleteTeamCell", indexPath) as AthleteTeamCell;
			cell.SetData (item);
			return cell;
		}
	}
}
