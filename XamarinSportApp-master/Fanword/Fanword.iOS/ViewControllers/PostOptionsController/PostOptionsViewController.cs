// This file has been autogenerated from a class added in the UI designer.

using System;
using Fanword.Shared;
using Foundation;
using Mobile.Extensions.iOS.Extensions;
using UIKit;

namespace Fanword.iOS
{
	public partial class PostOptionsViewController : BaseViewController
	{
		public string PostId { get; set; }
		public Action<bool> GetNewsFeedItems;
        public UINavigationController CustomNavigationController;
		public PostOptionsViewController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();
			View.BackgroundColor = UIColor.Clear;
			vwBackground.AddGestureRecognizer (new UITapGestureRecognizer (() => DismissViewController (true, null)));
			btnDeletePost.TouchUpInside += (sender2, e2) =>
			{
				DismissViewController (true, null);
				var alertView = new UIAlertView ();
				alertView.Title = "Confirm";
				alertView.Message = "Are you sure you want to delete this post";
				alertView.AddButton ("Cancel");
				alertView.AddButton ("Delete");
				alertView.Clicked += (sender, e) =>
				{
					if (e.ButtonIndex == 1)
					{
						GetBottomViewController (this).LoadingScreen.Show ();
						var apiTask = new ServiceApi ().DeletePost (PostId);
						apiTask.HandleError ();
						apiTask.OnSucess (response =>
						{
							 GetNewsFeedItems?.Invoke (true);
						});
					}
				};
				alertView.Show ();
			};

            btnEditPost.TouchUpInside += (sender, e) => 
            {
                var controller = Storyboard.InstantiateViewController<EditPostViewController>();
                controller.PostId = PostId;
                CustomNavigationController.PushViewController(controller, true);
				DismissViewController(true, null);
            };
		}


		BaseViewController GetBottomViewController (UIViewController viewcontroller)
		{
			if (viewcontroller.ParentViewController != null && !(viewcontroller.ParentViewController is UINavigationController))
			{
				return GetBottomViewController (viewcontroller.ParentViewController);
			}
			else
			{
				return (viewcontroller as BaseViewController);
			}
		}
	}
}
