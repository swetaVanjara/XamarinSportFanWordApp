// This file has been autogenerated from a class added in the UI designer.

using System;
using Fanword.Poco.Models;
using Foundation;
using UIKit;
using Mobile.Extensions.iOS.Extensions;
using Fanword.Shared;
using Fanword.Shared.Helpers;
using FFImageLoading;
using Fanword.iOS.Shared;
using CoreGraphics;

namespace Fanword.iOS
{
	public partial class SportProfileViewController : BaseViewController
	{
        public string SportId;
		FeedViewController feedController;
		SportAboutViewController aboutController;
		SportRankingsViewController rankingsController;
		ScoresViewController scoresController;
		SportProfile profile;
        public bool GoToRankings;

		public SportProfileViewController (IntPtr handle) : base (handle)
		{
		}
		public override UIStatusBarStyle PreferredStatusBarStyle()
		{
			return UIStatusBarStyle.LightContent;
		}


		public override void ViewDidLoad()
		{
			base.ViewDidLoad();

			ShowHelpIfNecessary(TutorialHelper.Profiles);

			btnBack.TouchUpInside += (sender, e) => NavigationController.PopViewController(true);

			feedController = Storyboard.InstantiateViewController<FeedViewController>();
			feedController.HeaderView = vwHeader;
			feedController.Id = SportId;
			feedController.Type = FeedType.Sport;
			feedController.RefreshStarted += (sender, e) => GetData();
			AddChildViewController(feedController);
			AddToScrollView(feedController.View, 0);
			feedController.HideAddPost();

			scoresController = Storyboard.InstantiateViewController<ScoresViewController>();
			scoresController.SportId = SportId;
            AddToScrollView(scoresController.View, 1);
			scoresController.HideFilter();
			AddChildViewController(scoresController);

			rankingsController = Storyboard.InstantiateViewController<SportRankingsViewController>();
			rankingsController.SportId = SportId;
			AddToScrollView(rankingsController.View, 2);
            AddChildViewController(rankingsController);

			aboutController = Storyboard.InstantiateViewController<SportAboutViewController>();
			aboutController.SportId = SportId;
			AddToScrollView(aboutController.View, 3);
            AddChildViewController(aboutController);

			svScroller.ContentSize = new CoreGraphics.CGSize() { Width = UIScreen.MainScreen.Bounds.Width * 4 };

			svScroller.Scrolled += (sender, e) =>
			{
				lcIndicatorLeading.Constant = svScroller.ContentOffset.X / 4f;
				int position = (int)(svScroller.ContentOffset.X / UIScreen.MainScreen.Bounds.Width);
				if (svScroller.ContentOffset.X % UIScreen.MainScreen.Bounds.Width > (UIScreen.MainScreen.Bounds.Width / 2f))
				{
					position++;
				}

				if (position == 1)
				{
					ShowHelpIfNecessary(TutorialHelper.SchedulesScores);
				}
			};

			GetData();

			btnProfile.TouchUpInside += (sender, e) =>
			{
				svScroller.SetContentOffset(new CoreGraphics.CGPoint(), true);
			};
			btnScores.TouchUpInside += (sender, e) =>
			{
				svScroller.SetContentOffset(new CoreGraphics.CGPoint() { X = UIScreen.MainScreen.Bounds.Width }, true);
			};
			btnRankings.TouchUpInside += (sender, e) =>
			{
				svScroller.SetContentOffset(new CoreGraphics.CGPoint() { X = UIScreen.MainScreen.Bounds.Width * 2 }, true);
			};
			btnAbout.TouchUpInside += (sender, e) =>
			{
				svScroller.SetContentOffset(new CoreGraphics.CGPoint() { X = UIScreen.MainScreen.Bounds.Width * 3 }, true);
			};

			btnFollow.TouchUpInside += (sender, e) =>
			{
				if (profile == null)
					return;

			    Shared.Follower.ToggleFollow(btnFollow, profile, profile.Id, FeedType.Sport, (following) =>
				{
					GetData();
				});
			};

            if(GoToRankings)
            {
                svScroller.SetContentOffset(new CGPoint() { X = UIScreen.MainScreen.Bounds.Width * 2 }, false);
            }

			lblFollowers.Superview.AddGestureRecognizer(new UITapGestureRecognizer(() =>
			{
				if (profile == null)
					return;
				var controller = Storyboard.InstantiateViewController<FollowersViewController>();
				controller.Id = profile.Id;
				controller.Type = FeedType.Sport;
				NavigationController.PushViewController(controller, true);
			}));
		}

		void AddToScrollView(UIView view, int position)
		{
			svScroller.Add(view);
			var frame = view.Frame;
			frame.Y = 0;
			frame.X = UIScreen.MainScreen.Bounds.Width * position;
			frame.Height = UIScreen.MainScreen.Bounds.Height - 120;
			frame.Width = UIScreen.MainScreen.Bounds.Width;
			view.Frame = frame;
		}

		public override void ViewDidLayoutSubviews()
		{
			base.ViewDidLayoutSubviews();
			FixFrame(feedController.View);
			FixFrame(aboutController.View);
			FixFrame(scoresController.View);
			FixFrame(rankingsController.View);
		}

		void FixFrame(UIView view)
		{
			var f = view.Frame;
			f.Width = UIScreen.MainScreen.Bounds.Width;
            f.Height = UIScreen.MainScreen.Bounds.Height - 120;
			view.Frame = f;
		}

		void GetData()
		{
			var apiTask = new ServiceApi().GetSportProfile(SportId);
			apiTask.HandleError();
			apiTask.OnSucess(response =>
			{
				profile = response.Result;
				//aboutController.SetView(profile);
				//rankingsController.SetView(profile);

				lblName.Text = response.Result.Name;
				lblTitle.Text = response.Result.Name;

				lblPosts.Text = LargeValueHelper.GetString(response.Result.Posts);
				lblFollowers.Text = LargeValueHelper.GetString(response.Result.Followers);

				Views.SetFollowed(btnFollow, response.Result.IsFollowing);

				if (!string.IsNullOrEmpty(response.Result.IconPublicUrl))
				{
					ImageService.Instance.LoadUrl(response.Result.IconPublicUrl).Retry(3, 300).Into(imgProfile);
				}
			});
		}
	}
}
