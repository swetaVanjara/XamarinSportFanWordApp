// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using Mobile.Extensions.iOS.Sources;
using UIKit;
using Fanword.Poco.Models;
using Fanword.Shared;
using Mobile.Extensions.iOS.Extensions;
using Fanword.iOS.Shared;

namespace Fanword.iOS
{
	public partial class SchoolAboutViewController : BaseViewController
	{
		CustomListSource<AthleteItem> source;
        CustomListSource<TeamProfile> teamProfileSource;
		public string SchoolId;
        SchoolProfile profile;
		public SchoolAboutViewController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad()
		{
			base.ViewDidLoad();

			btnTwitter.Superview.Hidden = true;
			btnFacebook.Superview.Hidden = true;
			btnInstagram.Superview.Hidden = true;

			btnAthletes.TouchUpInside += (sender, args) =>
			{
				SetButtons(btnAthletes);
				tvTable.Hidden = false;
				vwLinks.Hidden = true;
				tvTable.Source = source;
				tvTable.ReloadData();
			};

            btnTeams.TouchUpInside += (sender, e) => 
            {
				SetButtons(btnTeams);
				tvTable.Hidden = false;
				vwLinks.Hidden = true;
				tvTable.Source = teamProfileSource;
                tvTable.ReloadData();
            };

			btnLinks.TouchUpInside += (sender, e) =>
			{
				SetButtons(btnLinks);
				tvTable.Hidden = true;
				vwLinks.Hidden = false;
			};

			btnTwitter.TouchUpInside += (sender, e) => OpenUrl(profile?.TwitterUrl);
			btnFacebook.TouchUpInside += (sender, e) => OpenUrl(profile?.FacebookUrl);
			btnInstagram.TouchUpInside += (sender, e) => OpenUrl(profile?.InstagramUrl);
			btnWebsite.TouchUpInside += (sender, e) => OpenUrl(profile?.WebsiteUrl);
			btnSchedule.TouchUpInside += (sender, e) => OpenUrl(profile?.ScheduleUrl);

			GetData();
            SetButtons(btnTeams);
		}

		void GetData()
		{
			var apiTask = new ServiceApi().GetAthletesForSchool(SchoolId);
			apiTask.HandleError(LoadingScreen);
			apiTask.OnSucess(response =>
			{
				source = new CustomListSource<AthleteItem>(response.Result, GetCell, (tableView, indexPath) => 70);
				source.NoContentText = "No Athletes";
			});

			var apiTask2 = new ServiceApi().GetTeamsForSchool(SchoolId);
			apiTask2.HandleError(LoadingScreen);
			apiTask2.OnSucess(response =>
			{
				teamProfileSource = new CustomListSource<TeamProfile>(response.Result, GetCell, (tableView, indexPath) => 70);
				teamProfileSource.NoContentText = "No Teams";
				tvTable.Source = teamProfileSource;
				tvTable.ReloadData();
			});
		}

		public UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath, AthleteItem item)
		{
			var cell = tableView.DequeueReusableCell("SchoolAthleteCell", indexPath) as SchoolAthleteCell;
			cell.SetData(item, indexPath.Row, (pos, btnFollow) =>
			{
				var model = source.Items[pos];
			    Shared.Follower.ToggleFollow(btnFollow, model, model.Id, FeedType.User);
			}, NavigationController);
			cell.SelectionStyle = UITableViewCellSelectionStyle.None;
			return cell;
		}

		public UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath, TeamProfile item)
		{
			var cell = tableView.DequeueReusableCell("SchoolAthleteCell", indexPath) as SchoolAthleteCell;
			cell.SetData(item, indexPath.Row, (pos, btnFollow) =>
			{
				var model = teamProfileSource.Items[pos];
                Shared.Follower.ToggleFollow(btnFollow, model, model.Id, FeedType.Team);
			}, NavigationController);
			cell.SelectionStyle = UITableViewCellSelectionStyle.None;
			return cell;
		}

		void SetButtons(UIButton button)
		{
            btnTeams.SetTitleColor(UIColor.FromRGB(144, 144, 144), UIControlState.Normal);
			btnAthletes.SetTitleColor(UIColor.FromRGB(144, 144, 144), UIControlState.Normal);
			btnLinks.SetTitleColor(UIColor.FromRGB(144, 144, 144), UIControlState.Normal);
			button.SetTitleColor(UIColor.FromRGB(21, 21, 21), UIControlState.Normal);
		}

		public void SetView(SchoolProfile profile)
		{
            this.profile = profile;

			if (!string.IsNullOrEmpty(profile.TwitterUrl))
			{
				btnTwitter.Superview.Hidden = false;
			}
			if (!string.IsNullOrEmpty(profile.FacebookUrl))
			{
				btnFacebook.Superview.Hidden = false;
			}
			if (!string.IsNullOrEmpty(profile.InstagramUrl))
			{
				btnInstagram.Superview.Hidden = false;
			}
		}

		void OpenUrl(string link)
		{
            if (string.IsNullOrEmpty(link))
                return;
			try
			{
				if (!link.ToLower().StartsWith("http"))
				{
					link = "http://" + link;
				}
				UIApplication.SharedApplication.OpenUrl(new NSUrl(link));
			}
			catch { }
		}
	}
}
