// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using Foundation;
using UIKit;
using Mobile.Extensions.iOS.Extensions;
using Fanword.Shared;
using System.Linq;
using CoreGraphics;

namespace Fanword.iOS
{
	public partial class PostDetailsViewController : UIViewController
	{
		public string PostId { get; set; }

		public string Controller { get; set; }
        LikesViewController likesController;
        PostTagsViewController tagsController;
        PostSharesViewController sharesController;
        CommentsViewController commentController;
		List<UIViewController> controllers;

		public PostDetailsViewController (IntPtr handle) : base (handle)
		{
		}

		public override UIStatusBarStyle PreferredStatusBarStyle ()
		{
			return UIStatusBarStyle.LightContent;
		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();
			btnBack.TouchUpInside += (sender, e) =>
			{
                MainViewController.PostId = PostId;
				NavigationController.PopViewController (true);
			};

			controllers = new List<UIViewController> ();
			likesController = Storyboard.InstantiateViewController<LikesViewController> ();
			likesController.PostId = PostId;
			likesController.UpdateParent = SetHeaderInfo;
			controllers.Add (likesController);
            AddToScrollView(likesController.View, 0);

			commentController = Storyboard.InstantiateViewController<CommentsViewController> ();
			commentController.PostId = PostId;
			commentController.UpdateParent = SetHeaderInfo;
			controllers.Add (commentController);
            AddToScrollView(commentController.View, 1);

			sharesController = Storyboard.InstantiateViewController<PostSharesViewController>();
			sharesController.PostId = PostId;
			sharesController.UpdateParent = SetHeaderInfo;
			controllers.Add(sharesController);
            AddToScrollView(sharesController.View, 2);

			tagsController = Storyboard.InstantiateViewController<PostTagsViewController>();
			tagsController.PostId = PostId;
			tagsController.UpdateParent = SetHeaderInfo;
			controllers.Add(tagsController);
            AddChildViewController(tagsController);
            AddToScrollView(tagsController.View, 3);

            svScroller.ContentSize = new CGSize(UIScreen.MainScreen.Bounds.Width * 4, UIScreen.MainScreen.Bounds.Height - 120);

			btnLikes.TouchUpInside += (sender, e) =>
			{
				ScrollToPosition (0);
			};

			btnComments.TouchUpInside += (sender, e) =>
			{
				ScrollToPosition (1);
			};

			btnShares.TouchUpInside += (sender, e) =>
			{
				ScrollToPosition(2);
			};

			btnTags.TouchUpInside += (sender, e) =>
			{
				ScrollToPosition(3);
			};
            int oldPosition = 0;
            svScroller.Scrolled += (sender, e) => 
            {
				int position = (int)(svScroller.ContentOffset.X / UIScreen.MainScreen.Bounds.Width);
				if (svScroller.ContentOffset.X % UIScreen.MainScreen.Bounds.Width > (UIScreen.MainScreen.Bounds.Width / 2f))
				{
					position++;
				}
				var subController = (controllers[position] as IPostDetails);
				SetHeaderInfo(subController.Name, subController.Count);
				lcIndicatorLeading.Constant = svScroller.ContentOffset.X / 4f;
                if(oldPosition != position)
                {
                    View.EndEditing(true);
                }
                oldPosition = position;
            };

			if (Controller == "Comments")
			{
				ScrollToPosition(1, false);
				var subController = controllers[1] as IPostDetails;
				SetHeaderInfo(subController.Name, subController.Count);
			}
			if (Controller == "Shares")
			{
				ScrollToPosition(2, false);
				var subController = controllers[2] as IPostDetails;
				SetHeaderInfo(subController.Name, subController.Count);
			}
			if (Controller == "Tags")
			{
				ScrollToPosition(3, false);
				var subController = controllers[3] as IPostDetails;
				SetHeaderInfo(subController.Name, subController.Count);
			}
		}

		void AddToScrollView(UIView view, int position)
		{
			svScroller.Add(view);
			var frame = view.Frame;
			frame.Y = 0;
			frame.X = UIScreen.MainScreen.Bounds.Width * position;
			frame.Height = UIScreen.MainScreen.Bounds.Height - 120;
			frame.Width = UIScreen.MainScreen.Bounds.Width;
			view.Frame = frame;
		}

		public override void ViewDidLayoutSubviews()
		{
			base.ViewDidLayoutSubviews();
			FixFrame(likesController.View);
			FixFrame(commentController.View);
			FixFrame(sharesController.View);
			FixFrame(tagsController.View);
		}

		void FixFrame(UIView view)
		{
			var f = view.Frame;
			f.Width = UIScreen.MainScreen.Bounds.Width;
			f.Height = UIScreen.MainScreen.Bounds.Height - 120;
			view.Frame = f;
		}


		void ScrollToPosition (int position, bool animated = true)
		{
            svScroller.SetContentOffset(new CoreGraphics.CGPoint() { X = UIScreen.MainScreen.Bounds.Width * position, Y = 0 }, animated);
		}

		public void  SetHeaderInfo (string title, int count)
		{
			int position = (int)(svScroller.ContentOffset.X / UIScreen.MainScreen.Bounds.Width);
			if (svScroller.ContentOffset.X % UIScreen.MainScreen.Bounds.Width > (UIScreen.MainScreen.Bounds.Width / 2f))
			{
				position++;
			}

			if (title == "Comments" && position != 1 || title == "Likes" && position != 0 || title == "Share" && position != 3)
			{
				return;
			}

			lblHeader.Text = title;
			lblCount.Text = count.ToString ();
		}
	}
}
