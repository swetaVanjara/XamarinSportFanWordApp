// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using Fanword.Poco.Models;
using FFImageLoading;
using System.Collections.Generic;
using System.Linq;
using Fanword.Shared;
using Mobile.Extensions.iOS.Extensions;
using Mobile.Extensions.iOS.Sources;

namespace Fanword.iOS
{
	public partial class OnboardingAthleteSeasonViewController : BaseViewController
	{
		public AthleteTeam AthleteTeam;
		DateTime? FromDate;
		DateTime? UntilDate;
		bool UntilDateChosen = false;
        public bool IsEdit;
		public string ImageFilePath;
		public OnboardingAthleteSeasonViewController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();
			btnBack.TouchUpInside += (sender, e) => NavigationController.PopViewController(true);

			lblSportName.Text = AthleteTeam.SportName;
			lblSchoolName.Text = AthleteTeam.SchoolName;

			ImageService.Instance.LoadUrl (AthleteTeam.ProfilePublicUrl).Into (imgProfile);

			btnDone.Enabled = false;

			List<int> years = Enumerable.Range (DateTime.Now.Year - 65, 66).OrderByDescending (m => m).ToList ();
			List<int> years2 = years.ToList ();
			years2.Insert (0, -1);

			var fromSource = new CustomListSource<int> (years, GetCell, (arg1, arg2) => 40);
			fromSource.ItemClick += (sender, e) =>
			{
				tvFrom.Hidden = true;
				if (tvUntil.Hidden)
				{
					vwDivider.Hidden = true;
				}
				btnFrom.SetTitle (e.ToString (), UIControlState.Normal);
				FromDate = new DateTime ((int)e, 1, 1);
				CheckIfDone ();
			};
			tvFrom.Source = fromSource;

			var untilSource = new CustomListSource<int> (years2, GetCell, (arg1, arg2) => 40);
			untilSource.ItemClick += (sender, e) =>
			{
				tvUntil.Hidden = true;
				if (tvFrom.Hidden)
				{
					vwDivider.Hidden = true;
				}

				UntilDateChosen = true;
				if ((int)e == -1)
				{
					UntilDate = null;

					btnUntil.SetTitle ("Still competing", UIControlState.Normal);
				}
				else
				{
					btnUntil.SetTitle (e.ToString (), UIControlState.Normal);
					UntilDate = new DateTime ((int)e, 1, 1);
				}

				CheckIfDone ();
			};
			tvUntil.Source = untilSource;


			tvFrom.Hidden = true;
			vwDivider.Hidden = true;
			tvUntil.Hidden = true;


			btnUntil.TouchUpInside += (sender, e) =>
			{
				tvUntil.Hidden = false;
				vwDivider.Hidden = false;
			};

			btnFrom.TouchUpInside += (sender, e) =>
			{
				tvFrom.Hidden = false;
				vwDivider.Hidden = false;
			};

			btnDone.TouchUpInside += async (sender, e) =>
			{
				LoadingScreen.Show ();
				var error = await new ServiceApi ().SaveAthleteUser (ImageFilePath, FromDate.Value, UntilDate, AthleteTeam.Id);
				LoadingScreen.Hide();

				if (error.DisplayErrorMessage ())
					return;

                if(IsEdit)
                {
                    NavigationController.PopToViewController(NavigationController.ViewControllers.FirstOrDefault(m => m is StudentAthleteInfoViewController), true);
                }
                else
                {
					var controller = Storyboard.InstantiateViewController<MainViewController>();
					NavigationController.PushViewController(controller, true);
				}
			};

			btnTrash.TouchUpInside += (sender, e) => NavigationController.PopViewController(true);
		}

		void CheckIfDone ()
		{
			if (FromDate != null && UntilDateChosen)
			{
				btnDone.Enabled = true;
				btnDone.BackgroundColor = UIColor.FromRGB (249, 95, 6);
				btnDone.SetTitleColor (UIColor.White, UIControlState.Normal);

				btnUntil.SetTitleColor (UIColor.FromRGB (249, 95, 6), UIControlState.Normal);
				btnFrom.SetTitleColor (UIColor.FromRGB (249, 95, 6), UIControlState.Normal);
			}
		}

		public UITableViewCell GetCell (UITableView tableView, NSIndexPath indexPath, int item)
		{
			var cell = tableView.DequeueReusableCell ("SeasonDateCell");
			var label = cell.ViewWithTag (1) as UILabel;
			if (item == -1)
			{
				label.Text = "Still competing";
			}
			else
			{
				label.Text = item.ToString ();
			}

			cell.BackgroundColor = UIColor.Clear;

			return cell;
		}
	}
}
