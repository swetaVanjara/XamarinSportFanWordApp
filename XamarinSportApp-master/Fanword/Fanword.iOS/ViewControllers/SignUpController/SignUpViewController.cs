// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using Fanword.Shared;
using Mobile.Extensions.iOS.Extensions;
using Facebook.LoginKit;
using CoreGraphics;

namespace Fanword.iOS
{
	public partial class SignUpViewController : BaseViewController
	{
		LoginButton FacebookButton;
		public SignUpViewController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();

			btnBack.TouchUpInside += (sender, e) => NavigationController.PopViewController(true);

			FacebookButton = new LoginButton (new CGRect (0, 0, vwFacebookContainer.Frame.Width, vwFacebookContainer.Frame.Height));
			FacebookButton.LoginBehavior = LoginBehavior.SystemAccount;
			FacebookButton.Layer.CornerRadius = 10;
			FacebookButton.ClipsToBounds = true;
			FacebookButton.SetImage (null, UIControlState.Normal);
			FacebookButton.ContentEdgeInsets = new UIEdgeInsets (0, -90, 0, 90);
			FacebookButton.ReadPermissions = new [] { "email", "public_profile", "user_friends" };
			FacebookButton.SetAttributedTitle (new NSAttributedString ("SIGN IN WITH FACEBOOK"), UIControlState.Normal);
			FacebookButton.Completed += (sender, e) =>
			{
				if (e.Error != null)
				{

				}
				else if (!e.Result.IsCancelled)
				{
					LoadingScreen.Show ();

					var apiTask = new ServiceApi ().RegisterFacebook (e.Result.Token.TokenString);
					apiTask.HandleError (LoadingScreen);
					apiTask.OnSucess ((response) =>
					{
						var main = Storyboard.InstantiateViewController ("OnboardingCreateProfileViewController") as OnboardingCreateProfileViewController;
						NavigationController.PushViewController (main, true);
					});

				}
			};
			vwFacebookContainer.AddSubview (FacebookButton);

			btnSignUp.TouchUpInside += (sender, e) =>
			{
				LoadingScreen.Show ();
				var apiTask = new ServiceApi ().Register (txtFirstName.Text, txtLastName.Text, txtEmail.Text, txtPassword.Text, txtPassword.Text);
				apiTask.HandleError (LoadingScreen);
				apiTask.OnSucess((result) => 
				{
					var controller = Storyboard.InstantiateViewController<OnboardingCreateProfileViewController> ();
					NavigationController.PushViewController (controller, true);
					LoadingScreen.Hide ();
				});
			};

			btnTermsOfUse.TouchUpInside += (sender, e) =>
			{
				UIApplication.SharedApplication.OpenUrl (new NSUrl ("https://fanword.agilx.com/terms.html"));
			};
		}
	}
}
