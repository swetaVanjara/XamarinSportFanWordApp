// This file has been autogenerated from a class added in the UI designer.

using System;
using Fanword.Poco.Models;
using Foundation;
using UIKit;
using Humanizer;
using Fanword.Shared;
using FFImageLoading.Transformations;

namespace Fanword.iOS
{
	public partial class CommentCell : UITableViewCell
	{
		bool IsNew = true;
		ImageLoaderHelper imageTask;
		public CommentCell (IntPtr handle) : base (handle)
		{
		}
		Comment model;
		public void SetData (Comment item, Action<Comment, UIButton, UILabel> likeClicked, Action<Comment> replyClicked)
		{
			model = item;
			if (IsNew)
			{
				btnLike.TouchUpInside += (sender, e) => likeClicked?.Invoke(model, btnLike, lblLikes);
				btnReply.TouchUpInside += (sender, e) => replyClicked?.Invoke(model);
				IsNew = false;
			}
			lblResponseTo.Text = "Response to " + item.RepliedToUsername;
			lblName.Text = item.Username;
			lblTimeAgo.Text = TimeAgoHelper.GetTimeAgo(item.DateCreatedUtc);
			lblContent.Text = item.Content;
			lblLikes.Text = item.LikeCount.ToString();
			lblReplies.Text = item.ReplyCount.ToString ();

			if (string.IsNullOrEmpty (item.ParentCommentId))
			{
				BackgroundColor = UIColor.White;
				lblResponseTo.Superview.Hidden = true;
				lblReplies.Superview.Hidden = false;
			}
			else
			{
				BackgroundColor = UIColor.FromRGB (241, 241, 241);
				lblResponseTo.Superview.Hidden = false;
				lblReplies.Superview.Hidden = true;
			}

			imageTask?.Cancel(item.ProfileUrl);
			if (!string.IsNullOrEmpty(item.ProfileUrl))
			{
				imageTask = new ImageLoaderHelper(item.ProfileUrl, imgProfile, "DefaultProfile", null, new CircleTransformation());
			}

			btnLike.SetImage (UIImage.FromBundle (item.IsLiked ? "IconIsLiked" : "IconLike"), UIControlState.Normal);
		}
	}
}
