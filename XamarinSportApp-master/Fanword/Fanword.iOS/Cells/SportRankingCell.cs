// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using Fanword.Poco.Models;
using Fanword.iOS.Shared;

namespace Fanword.iOS
{
	public partial class SportRankingCell : UITableViewCell
	{
		ImageLoaderHelper imageTask;
		int pos;
		bool isNew = true;
		Action<int, UIButton> followClicked;
        Ranking item;
		public SportRankingCell (IntPtr handle) : base (handle)
		{
		}
		
		
		

		public void SetData(Ranking item, int position, Action<int, UIButton> followClicked, UINavigationController navigationController)
        {
            this.item = item;
			pos = position;
			this.followClicked = followClicked;


			if (isNew)
			{
				btnFollow.TouchUpInside += (sender, e) =>
				{
					this.followClicked?.Invoke(pos, btnFollow);
				};

				imgProfile.UserInteractionEnabled = true;
				imgProfile.AddGestureRecognizer(new UITapGestureRecognizer(() =>
				{
					Navigator.GoToTeamProfile(navigationController, this.item.TeamId, false);
				}));

				lblName.UserInteractionEnabled = true;
				lblName.AddGestureRecognizer(new UITapGestureRecognizer(() =>
				{
					Navigator.GoToTeamProfile(navigationController, this.item.TeamId, false);
				}));

				isNew = false;
			}

			lblName.Text = item.TeamName;
			lblRank.Text = item.Rank.ToString();

			imageTask?.Cancel(item.ProfileUrl);

            if (item.IsActive)
            {
                btnFollow.Hidden = false;
                lblRecord.Text = item.Wins + "W " + item.Loses + "L " + item.Ties + "T";
            }
            else
            {
                btnFollow.Hidden = true;
                lblRecord.Text = "This profile is not active yet";
            }


			if (!string.IsNullOrEmpty(item.ProfileUrl))
			{
				imageTask = new ImageLoaderHelper(item.ProfileUrl, imgProfile, "DefaultProfile");
			}

			Views.SetFollowed(btnFollow, item.IsFollowing);
        }

	}
}
