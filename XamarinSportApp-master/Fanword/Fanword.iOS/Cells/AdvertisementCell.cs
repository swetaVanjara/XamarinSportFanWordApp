// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using Fanword.Poco.Models;

namespace Fanword.iOS
{
	public partial class AdvertisementCell : UITableViewCell
	{
		ImageLoaderHelper imageTask;
        ImageLoaderHelper profileTask;
        bool isNew = true;
        FeedItem Item;
		public AdvertisementCell (IntPtr handle) : base (handle)
		{
		}

        public void SetData(FeedItem item)
        {
            Item = item;
            if(isNew)
            {
                AddGestureRecognizer(new UITapGestureRecognizer(() =>
                {
					if (!string.IsNullOrEmpty(Item.AdvertisementUrl))
					{
						if (!Item.AdvertisementUrl.ToLower().StartsWith("http"))
						{
							Item.AdvertisementUrl = "http://" + Item.AdvertisementUrl;
						}
                        UIApplication.SharedApplication.OpenUrl(new NSUrl(Item.AdvertisementUrl));
					}
                }));
                isNew = false;
            }

			imgImage.RemoveConstraints(imgImage.Constraints);
			imgImage.AddConstraint(NSLayoutConstraint.Create(imgImage, NSLayoutAttribute.Height, NSLayoutRelation.Equal, imgImage, NSLayoutAttribute.Width, (nfloat)item.ImageAspectRatio, 0));

			lblName.Text = item.Username;
			profileTask?.Cancel(item.ProfileUrl);
			if (!string.IsNullOrEmpty(item.ProfileUrl))
			{
                profileTask = new ImageLoaderHelper(item.ProfileUrl, imgProfile, AppDelegate.DefaultProfileString);
			}

            lblContent.Text = item.Content;
            if(string.IsNullOrEmpty(lblContent.Text))
            {
                lblContent.Superview.Hidden = true;
            }
            else
            {
                lblContent.Superview.Hidden = false;
            }

			imageTask?.Cancel(item.ImageUrl);
			if (!string.IsNullOrEmpty(item.ImageUrl))
			{
				imageTask = new ImageLoaderHelper(item.ImageUrl, imgImage, "IconNoImage");
			}
        }
	}
}
