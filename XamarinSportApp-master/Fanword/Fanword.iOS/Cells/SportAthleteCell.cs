// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using Fanword.Poco.Models;
using FFImageLoading.Transformations;
using Fanword.iOS.Shared;

namespace Fanword.iOS
{
	public partial class SportAthleteCell : UITableViewCell
	{
		ImageLoaderHelper imageTask;
		int pos;
		bool isNew = true;
		Action<int, UIButton> followClicked;
        string Id;
        bool isAthlete;
		public SportAthleteCell (IntPtr handle) : base (handle)
		{
		}

		public void SetData(AthleteItem item, int position, Action<int, UIButton> followClicked, UINavigationController navigationController)
		{

			SetView(item.ProfileUrl, item.Name, item.SportName, true, position, followClicked, item.IsFollowing, navigationController, item.Id);
		}

		public void SetData(TeamProfile item, int position, Action<int, UIButton> followClicked, UINavigationController navigationController)
		{
			SetView(item.ProfileUrl, item.SchoolName, item.SportName, false, position, followClicked, item.IsFollowing, navigationController, item.Id);
		}

		void SetView(string profileUrl, string name, string subtitle, bool isAthlete, int position, Action<int, UIButton> followClicked, bool isFollowed, UINavigationController navigationController, string id)
		{
            this.Id = id;
            this.isAthlete = isAthlete;
            pos = position;
			this.followClicked = followClicked;
			if (isNew)
			{
				btnFollow.TouchUpInside += (sender, e) =>
				{
					this.followClicked?.Invoke(pos, btnFollow);
				};

				imgProfile.UserInteractionEnabled = true;
				imgProfile.AddGestureRecognizer(new UITapGestureRecognizer(() =>
				{
                    if(this.isAthlete)
                    {
						Navigator.GoToUserProfile(navigationController, this.Id);
                    }
                    else
                    {
						Navigator.GoToTeamProfile(navigationController, this.Id, false);
                    }
				}));

				lblName.UserInteractionEnabled = true;
				lblName.AddGestureRecognizer(new UITapGestureRecognizer(() =>
				{
					if (this.isAthlete)
					{
						Navigator.GoToUserProfile(navigationController, this.Id);
					}
					else
					{
						Navigator.GoToTeamProfile(navigationController, this.Id, false);
					}
				}));

				isNew = false;
			}

			lblName.Text = name;
			lblAthlete.Text = subtitle;
			imageTask?.Cancel(profileUrl);
			if (!string.IsNullOrEmpty(profileUrl))
			{
				imageTask = new ImageLoaderHelper(profileUrl, imgProfile, "DefaultProfile", null, isAthlete ? new CircleTransformation() : null);
			}

			Views.SetFollowed(btnFollow, isFollowed);
		}
	}
}
