// This file has been autogenerated from a class added in the UI designer.

using System;
using Fanword.Poco.Models;
using Foundation;
using UIKit;
using Mobile.Extensions.iOS.Extensions;
using Fanword.iOS.Shared;

namespace Fanword.iOS
{
	public partial class RankingCell : UITableViewCell
	{
		ImageLoaderHelper imageTask;
		Ranking item;
		bool IsNew = true;
		UIStringAttributes boldAttributes;
		UIStringAttributes regularAttributes;
		public RankingCell (IntPtr handle) : base (handle)
		{
		}
		
		

		public void SetData (Ranking item, Action<Ranking, UIButton> followClicked, UINavigationController navigationController)
		{
			if (boldAttributes == null)
			{
				boldAttributes = new UIStringAttributes ();
				boldAttributes.Font = UIFont.BoldSystemFontOfSize (btnShowRankings.Font.PointSize);
				boldAttributes.ForegroundColor = UIColor.FromRGB (144, 144, 144);
			}
			if (boldAttributes == null)
			{
				regularAttributes = new UIStringAttributes ();
				regularAttributes.Font = UIFont.SystemFontOfSize (btnShowRankings.Font.PointSize);
				regularAttributes.ForegroundColor = UIColor.FromRGB (144, 144, 144);

			}

			this.item = item;
			if (IsNew)
			{
				btnShowRankings.SetTitleColor (UIColor.FromRGB (144, 144, 144), UIControlState.Normal);
				btnFollow.TouchUpInside += (sender, e) => followClicked?.Invoke (this.item, btnFollow);
				btnShowRankings.TouchUpInside += (sender, e) =>
                {
                    Navigator.GoToSportProfile(navigationController, this.item.SportId, true);
                };
                imgProfile.UserInteractionEnabled = true;
                imgProfile.AddGestureRecognizer(new UITapGestureRecognizer(() =>
                {
					Navigator.GoToTeamProfile(navigationController, this.item.TeamId, false);
                }));

				lblTeamName.UserInteractionEnabled = true;
				lblTeamName.AddGestureRecognizer(new UITapGestureRecognizer(() =>
				{
					Navigator.GoToTeamProfile(navigationController, this.item.TeamId, false);
				}));
				IsNew = false;
			}

			lblRank.Text = item.Rank.ToString ();
			lblSportName.Text = item.SportName;
			lblTeamName.Text = item.TeamName;
			lblDate.Text = item.DateUpdatedUtc.ToString ("dd MMMM");

			NSMutableAttributedString attributedString = new NSMutableAttributedString ("Show ", regularAttributes);
			attributedString.Append (new NSMutableAttributedString (item.SportName, boldAttributes));
			attributedString.Append (new NSMutableAttributedString (" Rankings", regularAttributes));
			btnShowRankings.SetAttributedTitle (attributedString, UIControlState.Normal);

            if (item.IsActive)
            {
                btnFollow.Hidden = false;
                lblWinsLosses.Text = item.Wins + "W " + item.Loses + "L " + item.Ties + "T";
                if (item.IsFollowing)
                {
                    btnFollow.SetTitle("Following", UIControlState.Normal);
                    btnFollow.Layer.BorderWidth = 0;
                    btnFollow.SetTitleColor(UIColor.White, UIControlState.Normal);
                    btnFollow.BackgroundColor = UIColor.FromRGB(249, 95, 6);
                }
                else
                {
                    btnFollow.SetTitle("Follow", UIControlState.Normal);

                    btnFollow.Layer.BorderWidth = 1;
                    btnFollow.SetTitleColor(UIColor.FromRGB(144, 144, 144), UIControlState.Normal);
                    btnFollow.Layer.BorderColor = UIColor.FromRGB(144, 144, 144).CGColor;
                    btnFollow.Layer.BorderColor = UIColor.FromRGB(144, 144, 144).CGColor;
                    btnFollow.BackgroundColor = UIColor.White;
                }
            }else{
                btnFollow.Hidden = true;
                lblWinsLosses.Text = "This profile is not active yet";
            }

			imageTask?.Cancel (item.ProfileUrl);
			if (!string.IsNullOrEmpty (item.ProfileUrl))
			{
				imageTask = new ImageLoaderHelper (item.ProfileUrl, imgProfile, "DefaultProfile");
			}
		}
	}
}
